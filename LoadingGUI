import javax.swing.*;
import java.awt.*;

public class LoadingGUI extends JFrame {

    private JPanel loader;
    private JLabel text;
    private JLabel ball_loader;

    public LoadingGUI() {
        initComponents();
        setResizable(false);
        setSize(720, 410);
    }

    private void initComponents() {
        // Creating the loader panel and initialising its components
        loader = new JPanel();
        loader.setBackground(Color.WHITE);

        text = new JLabel("Logging In...");
        text.setFont(new Font("Tahoma", Font.PLAIN, 18));
        text.setForeground(new Color(51, 153, 255));

        ball_loader = new JLabel(new ImageIcon(getClass().getResource("ball-loading.gif")));

        // Setting up the layout of the loader panel
        GroupLayout loaderLayout = new GroupLayout(loader);
        loader.setLayout(loaderLayout);
        loaderLayout.setHorizontalGroup(
                loaderLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(loaderLayout.createSequentialGroup()
                                .addGap(256, 256, 256)
                                .addGroup(loaderLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(ball_loader)
                                        .addGroup(loaderLayout.createSequentialGroup()
                                                .addGap(48, 48, 48)
                                                .addComponent(text)))
                                .addContainerGap(264, Short.MAX_VALUE))
        );
        loaderLayout.setVerticalGroup(
                loaderLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(loaderLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(ball_loader)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(text)
                                .addContainerGap(123, Short.MAX_VALUE))
        );

        setContentPane(loader);
    }

    // Method to simulate a login process
    public void simulateLogin() {
        // Show the loading screen
        setVisible(true);

        // Use a SwingWorker to perform the login task in the background
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                // Add code to parse json file for username and password matches...
                Thread.sleep(5000); // Simulate delay
                return null;
            }

            @Override
            protected void done() {
                // Open the main window after the delay
                LoginGUI loginGUI = new LoginGUI();
                loginGUI.setVisible(true);
                dispose(); // Close the loading window

                // TODO: Replace LoginGUI with the actual ApplicationGUI in the future
            }
        };
        worker.execute();
    }
}
